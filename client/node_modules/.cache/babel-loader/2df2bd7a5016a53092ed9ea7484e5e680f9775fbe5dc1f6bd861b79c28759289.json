{"ast":null,"code":"var _jsxFileName = \"/Users/nazimkhan/Downloads/Medical Record Store in Blockchain/client/src/components/Doctor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\nimport { Buffer } from 'buffer';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Doctor = _ref => {\n  _s();\n  let {\n    uploadToPinata,\n    pinataGateway,\n    mediChain,\n    account\n  } = _ref;\n  const [doctor, setDoctor] = useState(null);\n  const [patient, setPatient] = useState(null);\n  const [patientRecord, setPatientRecord] = useState(null);\n  const [disease, setDisease] = useState('');\n  const [treatment, setTreatment] = useState('');\n  const [charges, setCharges] = useState('');\n  const [fileBuffer, setFileBuffer] = useState(null);\n  const [patList, setPatList] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [showRecordModal, setShowRecordModal] = useState(false);\n  const [transactionsList, setTransactionsList] = useState([]);\n  const getDoctorData = async () => {\n    var doctor = await mediChain.methods.doctorInfo(account).call();\n    setDoctor(doctor);\n  };\n  const getPatientAccessList = async () => {\n    var pat = await mediChain.methods.getDoctorPatientList(account).call();\n    let pt = [];\n    for (let i = 0; i < pat.length; i++) {\n      let patient = await mediChain.methods.patientInfo(pat[i]).call();\n      patient = {\n        ...patient,\n        account: pat[i]\n      };\n      pt = [...pt, patient];\n    }\n    setPatList(pt);\n  };\n  const getTransactionsList = async () => {\n    var transactionsIdList = await mediChain.methods.getDoctorTransactions(account).call();\n    let tr = [];\n    for (let i = transactionsIdList.length - 1; i >= 0; i--) {\n      let transaction = await mediChain.methods.transactions(transactionsIdList[i]).call();\n      let sender = await mediChain.methods.patientInfo(transaction.sender).call();\n      if (!sender.exists) sender = await mediChain.methods.insurerInfo(transaction.sender).call();\n      transaction = {\n        ...transaction,\n        id: transactionsIdList[i],\n        senderEmail: sender.email\n      };\n      tr = [...tr, transaction];\n    }\n    setTransactionsList(tr);\n  };\n  const captureFile = async e => {\n    e.preventDefault();\n    const file = e.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      setFileBuffer(Buffer(reader.result));\n    };\n  };\n  const handleCloseModal = () => setShowModal(false);\n  const handleCloseRecordModal = () => setShowRecordModal(false);\n  const handleShowModal = async patient => {\n    await setPatient(patient);\n    await setShowModal(true);\n  };\n  const handleShowRecordModal = async patient => {\n    var record = {};\n    await fetch(`${pinataGateway}/${patient.record}`).then(res => res.json()).then(data => record = data);\n    await setPatientRecord(record);\n    await setShowRecordModal(true);\n  };\n  const submitDiagnosis = async e => {\n    e.preventDefault();\n    let file = \"\";\n    if (fileBuffer) {\n      try {\n        file = await uploadToPinata(fileBuffer, 'prescription');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    var record = {};\n    await fetch(`${pinataGateway}/${patient.record}`).then(res => res.json()).then(data => {\n      record = data;\n    });\n    const date = new Date();\n    const formattedDate = date.toLocaleString(\"en-GB\", {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    });\n    record.treatments = [{\n      disease,\n      treatment,\n      charges,\n      prescription: file,\n      date: formattedDate,\n      doctorEmail: doctor.email\n    }, ...record.treatments];\n    record = Buffer(JSON.stringify(record));\n    try {\n      const ipfsHash = await uploadToPinata(record, 'record.json');\n      mediChain.methods.insuranceClaimRequest(patient.account, ipfsHash, charges).send({\n        from: account\n      }).on('transactionHash', hash => {\n        return window.location.href = '/login';\n      });\n    } catch (error) {\n      console.log(error);\n      return;\n    }\n  };\n  useEffect(() => {\n    if (account === \"\") return window.location.href = '/login';\n    if (!doctor) getDoctorData();\n    if (patList.length === 0) getPatientAccessList();\n    if (transactionsList.length === 0) getTransactionsList();\n  }, [doctor, patList, transactionsList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: doctor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Doctor's Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Name: Dr. \", doctor.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Email: \", doctor.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Address: \", account]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"List of Patient's Medical Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          id: \"records\",\n          striped: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sr.\\xA0No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Patient\\xA0Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Patient\\xA0Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Records\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: patList.length > 0 ? patList.map((pat, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: idx + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: pat.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: pat.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"coolColor\",\n                    onClick: e => handleShowModal(pat),\n                    children: \"Diagnose\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"coolColor\",\n                    onClick: e => handleShowRecordModal(pat),\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 25\n                }, this)]\n              }, idx + 1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 23\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"List of Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sr.\\xA0No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sender\\xA0Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: transactionsList.length > 0 ? transactionsList.map((transaction, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: idx + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: transaction.senderEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: transaction.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: transaction.settled ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge rounded-pill bg-success\",\n                    children: \"Settled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 54\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge rounded-pill bg-warning\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 119\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 27\n                }, this)]\n              }, idx + 1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 25\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), patient ? /*#__PURE__*/_jsxDEV(Modal, {\n        id: \"modal\",\n        size: \"lg\",\n        centered: true,\n        show: showModal,\n        onHide: handleCloseModal,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"modalTitle\",\n            children: [\"Enter diagnosis for: \", patient.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Disease: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"text\",\n                value: disease,\n                onChange: e => setDisease(e.target.value),\n                placeholder: \"Enter disease\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Treatment: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                as: \"textarea\",\n                value: treatment,\n                onChange: e => setTreatment(e.target.value),\n                placeholder: \"Enter the treatment in details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Medical Charges: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"number\",\n                value: charges,\n                onChange: e => setCharges(e.target.value),\n                placeholder: \"Enter medical charges incurred\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Upload Prescription\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                onChange: captureFile,\n                accept: \".jpg, .jpeg, .png, .pdf\",\n                type: \"file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleCloseModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"coolColor\",\n            onClick: submitDiagnosis,\n            children: \"Submit Diagnosis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), patientRecord ? /*#__PURE__*/_jsxDEV(Modal, {\n        id: \"modal\",\n        size: \"lg\",\n        centered: true,\n        show: showRecordModal,\n        onHide: handleCloseRecordModal,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"modalTitle\",\n            children: \"Medical Record:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Patient Name: \", patientRecord.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Patient Email: \", patientRecord.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Patient Age: \", patientRecord.age]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                id: \"records\",\n                striped: true,\n                bordered: true,\n                hover: true,\n                size: \"sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Sr.\\xA0No.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Doctor\\xA0Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Disease\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Treatment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Prescription\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: patientRecord.treatments && patientRecord.treatments.length > 0 ? patientRecord.treatments.map((treatment, idx) => {\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: idx + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: treatment.doctorEmail\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: treatment.date\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: treatment.disease\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: treatment.treatment\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: treatment.prescription ? /*#__PURE__*/_jsxDEV(Link, {\n                          to: `${pinataGateway}/${treatment.prescription}`,\n                          target: \"_blank\",\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"coolColor\",\n                            children: \"View\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 266,\n                            columnNumber: 111\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 266,\n                          columnNumber: 39\n                        }, this) : \"No document uploaded\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 264,\n                        columnNumber: 35\n                      }, this)]\n                    }, idx + 1, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 33\n                    }, this);\n                  }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleCloseRecordModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Doctor, \"/110BSuK+z9kAtlfocz1NhO7BTg=\");\n_c = Doctor;\nexport default Doctor;\nvar _c;\n$RefreshReg$(_c, \"Doctor\");","map":{"version":3,"names":["React","useEffect","useState","Form","Button","Table","Modal","Buffer","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Doctor","_ref","_s","uploadToPinata","pinataGateway","mediChain","account","doctor","setDoctor","patient","setPatient","patientRecord","setPatientRecord","disease","setDisease","treatment","setTreatment","charges","setCharges","fileBuffer","setFileBuffer","patList","setPatList","showModal","setShowModal","showRecordModal","setShowRecordModal","transactionsList","setTransactionsList","getDoctorData","methods","doctorInfo","call","getPatientAccessList","pat","getDoctorPatientList","pt","i","length","patientInfo","getTransactionsList","transactionsIdList","getDoctorTransactions","tr","transaction","transactions","sender","exists","insurerInfo","id","senderEmail","email","captureFile","e","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","result","handleCloseModal","handleCloseRecordModal","handleShowModal","handleShowRecordModal","record","fetch","then","res","json","data","submitDiagnosis","error","console","log","date","Date","formattedDate","toLocaleString","day","month","year","hour","minute","treatments","prescription","doctorEmail","JSON","stringify","ipfsHash","insuranceClaimRequest","send","from","on","hash","location","href","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Group","Label","name","striped","bordered","hover","size","map","idx","variant","onClick","value","settled","centered","show","onHide","Header","closeButton","Title","Body","Control","required","type","onChange","placeholder","as","accept","Footer","age","to","_c","$RefreshReg$"],"sources":["/Users/nazimkhan/Downloads/Medical Record Store in Blockchain/client/src/components/Doctor.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table'\nimport Modal from 'react-bootstrap/Modal';\nimport { Buffer } from 'buffer';\nimport { Link } from 'react-router-dom'\n\nconst Doctor = ({uploadToPinata, pinataGateway, mediChain, account}) => {\n  const [doctor, setDoctor] = useState(null);\n  const [patient, setPatient] = useState(null);\n  const [patientRecord, setPatientRecord] = useState(null);\n  const [disease, setDisease] = useState('');\n  const [treatment, setTreatment] = useState('');\n  const [charges, setCharges] = useState('');\n  const [fileBuffer, setFileBuffer] = useState(null);\n  const [patList, setPatList] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [showRecordModal, setShowRecordModal] = useState(false);\n  const [transactionsList, setTransactionsList] = useState([]);\n\n  const getDoctorData = async () => {\n    var doctor = await mediChain.methods.doctorInfo(account).call();\n    setDoctor(doctor);\n  }\n  const getPatientAccessList = async () => {\n    var pat = await mediChain.methods.getDoctorPatientList(account).call();\n    let pt = []\n    for(let i=0; i<pat.length; i++){\n      let patient = await mediChain.methods.patientInfo(pat[i]).call();\n      patient = { ...patient, account:pat[i] }\n      pt = [...pt, patient]\n    }\n    setPatList(pt);\n  }\n  const getTransactionsList = async () => {\n    var transactionsIdList = await mediChain.methods.getDoctorTransactions(account).call();\n    let tr = [];\n    for(let i=transactionsIdList.length-1; i>=0; i--){\n        let transaction = await mediChain.methods.transactions(transactionsIdList[i]).call();\n        let sender = await mediChain.methods.patientInfo(transaction.sender).call();\n        if(!sender.exists) sender = await mediChain.methods.insurerInfo(transaction.sender).call();\n        transaction = {...transaction, id: transactionsIdList[i], senderEmail: sender.email}\n        tr = [...tr, transaction];\n    }\n    setTransactionsList(tr);\n  }\n  const captureFile = async (e) => {\n    e.preventDefault()\n    const file = e.target.files[0];\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => {\n      setFileBuffer(Buffer(reader.result))\n    }\n  }\n\n  const handleCloseModal = () => setShowModal(false);\n  const handleCloseRecordModal = () => setShowRecordModal(false);\n  const handleShowModal = async (patient) => {\n    await setPatient(patient);\n    await setShowModal(true);\n  }\n  const handleShowRecordModal = async (patient) => {\n    var record = {}\n    await fetch(`${pinataGateway}/${patient.record}`)\n      .then(res => res.json())\n      .then(data => record = data)\n    await setPatientRecord(record);\n    await setShowRecordModal(true);\n  }\n  const submitDiagnosis = async (e) => {\n    e.preventDefault()\n    let file = \"\";\n    if(fileBuffer) {\n      try {\n        file = await uploadToPinata(fileBuffer, 'prescription');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    var record = {}\n    await fetch(`${pinataGateway}/${patient.record}`)\n      .then(res => res.json())\n      .then(data => {\n        record = data;\n      })\n    const date = new Date();\n    const formattedDate = date.toLocaleString(\"en-GB\", {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    });\n    record.treatments = [ {disease, treatment, charges, prescription: file, date: formattedDate, doctorEmail: doctor.email}, ...record.treatments ]\n    record = Buffer(JSON.stringify(record))\n    try {\n      const ipfsHash = await uploadToPinata(record, 'record.json');\n      mediChain.methods.insuranceClaimRequest(patient.account, ipfsHash, charges).send({from: account}).on('transactionHash', (hash) => {\n        return window.location.href = '/login'\n      })\n    } catch (error) {\n      console.log(error);\n      return;\n    }\n  }\n\n  useEffect(() => {\n    if(account === \"\") return window.location.href = '/login'\n    if(!doctor) getDoctorData()\n    if(patList.length === 0) getPatientAccessList();\n    if(transactionsList.length === 0) getTransactionsList();\n  }, [doctor, patList, transactionsList])\n\n  return (\n    <div>\n      { doctor ?\n        <>\n          <div className='box'>\n            <h2>Doctor's Profile</h2>\n            <Form>\n              <Form.Group>\n                <Form.Label>Name: Dr. {doctor.name}</Form.Label>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Email: {doctor.email}</Form.Label>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Address: {account}</Form.Label>\n              </Form.Group>\n            </Form>\n          </div>\n          <div className='box'>\n            <h2>List of Patient's Medical Records</h2>\n            <Table id='records' striped bordered hover size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Sr.&nbsp;No.</th>\n                  <th>Patient&nbsp;Name</th>\n                  <th>Patient&nbsp;Email</th>\n                  <th>Action</th>\n                  <th>Records</th>\n                </tr>\n              </thead>\n              <tbody>\n                { patList.length > 0 ?\n                  patList.map((pat, idx) => {\n                    return (\n                      <tr key={idx+1}>\n                        <td>{idx+1}</td>\n                        <td>{pat.name}</td>\n                        <td>{pat.email}</td>\n                        <td><Button variant='coolColor' onClick={(e) => handleShowModal(pat)} >Diagnose</Button></td>\n                        <td><Button variant=\"coolColor\" onClick={(e) => handleShowRecordModal(pat)} >View</Button></td>\n                      </tr>\n                    )\n                  })\n                  : <></>\n                }\n              </tbody>\n            </Table>\n          </div>\n          <div className='box'>\n            <h2>List of Transactions</h2>\n              <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                      <th>Sr.&nbsp;No.</th>\n                      <th>Sender&nbsp;Email</th>\n                      <th>Amount</th>\n                      <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                  { transactionsList.length > 0 ? \n                    transactionsList.map((transaction, idx) => {\n                      return (\n                        <tr key={idx+1}>\n                          <td>{idx+1}</td>\n                          <td>{transaction.senderEmail}</td>\n                          <td>{transaction.value}</td>\n                          <td>{transaction.settled ? <span className='badge rounded-pill bg-success'>Settled</span> : <span className='badge rounded-pill bg-warning'>Pending</span>}</td>\n                        </tr>\n                      )\n                    })\n                    : <></>\n                  }\n                </tbody>\n              </Table>\n          </div>\n          { patient ? <Modal id=\"modal\" size=\"lg\" centered show={showModal} onHide={handleCloseModal}>\n            <Modal.Header closeButton>\n              <Modal.Title id=\"modalTitle\">Enter diagnosis for: {patient.name}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                  <Form.Group className='mb-3'>\n                    <Form.Label>Disease: </Form.Label>\n                    <Form.Control required type=\"text\" value={disease} onChange={(e) => setDisease(e.target.value)} placeholder='Enter disease'></Form.Control>\n                  </Form.Group>\n                  <Form.Group className='mb-3'>\n                    <Form.Label>Treatment: </Form.Label>\n                    <Form.Control required as=\"textarea\" value={treatment} onChange={(e) => setTreatment(e.target.value)} placeholder='Enter the treatment in details'></Form.Control>\n                  </Form.Group>\n                  <Form.Group className='mb-3'>\n                    <Form.Label>Medical Charges: </Form.Label>\n                    <Form.Control required type=\"number\" value={charges} onChange={(e) => setCharges(e.target.value)} placeholder='Enter medical charges incurred'></Form.Control>\n                  </Form.Group>\n                  <Form.Group className='mb-3'>\n                    <Form.Label>Upload Prescription</Form.Label>\n                    <Form.Control onChange={captureFile} accept=\".jpg, .jpeg, .png, .pdf\" type=\"file\" />\n                  </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleCloseModal}>\n                Close\n              </Button>\n              <Button type=\"submit\" variant=\"coolColor\" onClick={submitDiagnosis}>\n                Submit Diagnosis\n              </Button>\n            </Modal.Footer>\n          </Modal> : <></>\n          }\n          { patientRecord ? <Modal id=\"modal\" size=\"lg\" centered show={showRecordModal} onHide={handleCloseRecordModal}>\n            <Modal.Header closeButton>\n              <Modal.Title id=\"modalTitle\">Medical Record:</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                  <Form.Group>\n                    <Form.Label>Patient Name: {patientRecord.name}</Form.Label>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Label>Patient Email: {patientRecord.email}</Form.Label>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Label>Patient Age: {patientRecord.age}</Form.Label>\n                  </Form.Group>\n                  <Form.Group>\n                    <Table id='records' striped bordered hover size=\"sm\">\n                      <thead>\n                        <tr>\n                          <th>Sr.&nbsp;No.</th>\n                          <th>Doctor&nbsp;Email</th>\n                          <th>Date</th>\n                          <th>Disease</th>\n                          <th>Treatment</th>\n                          <th>Prescription</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        { patientRecord.treatments && patientRecord.treatments.length > 0 ?\n                            patientRecord.treatments.map((treatment, idx) => {\n                              return (\n                                <tr key={idx+1}>\n                                  <td>{idx+1}</td>\n                                  <td>{treatment.doctorEmail}</td>\n                                  <td>{treatment.date}</td>\n                                  <td>{treatment.disease}</td>\n                                  <td>{treatment.treatment}</td>\n                                  <td>\n                                    { treatment.prescription ? \n                                      <Link to={`${pinataGateway}/${treatment.prescription}`} target=\"_blank\"><Button variant=\"coolColor\">View</Button></Link>\n                                      : \"No document uploaded\"\n                                    }\n                                  </td>\n                                </tr>\n                              )\n                            })\n                          : <></>\n                        }\n                      </tbody>\n                    </Table>\n                  </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleCloseRecordModal}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal> : <></>\n          }\n        </>\n        : <div>Loading...</div>\n      }\n    </div>\n  )\n}\n\nexport default Doctor\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}