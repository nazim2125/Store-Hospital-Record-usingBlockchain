{"ast":null,"code":"var _jsxFileName = \"/Users/nazimkhan/Downloads/mediChain-master 2/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport Doctor from \"./Doctor.js\";\nimport Patient from \"./Patient.js\";\nimport Insurer from \"./Insurer.js\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = _ref => {\n  _s();\n  let {\n    mediChain,\n    token,\n    account,\n    uploadToPinata,\n    pinataGateway\n  } = _ref;\n  const [ethValue, setEthValue] = useState(0);\n  useEffect(() => {\n    fetch('https://api.coinbase.com/v2/exchange-rates?currency=ETH').then(res => res.json()).then(res => setEthValue(res.data.rates.INR));\n    if (token === \"\") window.location.href = '/login';\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash\",\n    children: token === \"1\" ? /*#__PURE__*/_jsxDEV(Patient, {\n      uploadToPinata: uploadToPinata,\n      pinataGateway: pinataGateway,\n      ethValue: ethValue,\n      mediChain: mediChain,\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 28\n    }, this) : token === \"2\" ? /*#__PURE__*/_jsxDEV(Doctor, {\n      uploadToPinata: uploadToPinata,\n      pinataGateway: pinataGateway,\n      mediChain: mediChain,\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 178\n    }, this) : token === \"3\" ? /*#__PURE__*/_jsxDEV(Insurer, {\n      pinataGateway: pinataGateway,\n      ethValue: ethValue,\n      mediChain: mediChain,\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 307\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"XJgXk6F4M6DtCjNMdPinTOKVH9Q=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Doctor","Patient","Insurer","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_ref","_s","mediChain","token","account","uploadToPinata","pinataGateway","ethValue","setEthValue","fetch","then","res","json","data","rates","INR","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nazimkhan/Downloads/mediChain-master 2/client/src/components/Dashboard.js"],"sourcesContent":["import Doctor from \"./Doctor.js\"\nimport Patient from \"./Patient.js\"\nimport Insurer from \"./Insurer.js\"\nimport { useEffect, useState } from \"react\"\n\nconst Dashboard = ({mediChain, token, account, uploadToPinata, pinataGateway}) => {\n    const [ethValue, setEthValue] = useState(0);\n\n    useEffect(() => {\n        fetch('https://api.coinbase.com/v2/exchange-rates?currency=ETH')\n            .then(res => res.json())\n            .then(res => setEthValue(res.data.rates.INR))\n        if(token===\"\") window.location.href = '/login'\n    }, [])\n\n    return (\n        <div className=\"dash\">\n            {token===\"1\" ? <Patient uploadToPinata={uploadToPinata} pinataGateway={pinataGateway} ethValue={ethValue} mediChain={mediChain} account={account} /> : token===\"2\" ? <Doctor uploadToPinata={uploadToPinata} pinataGateway={pinataGateway} mediChain={mediChain} account={account} /> : token===\"3\" ? <Insurer pinataGateway={pinataGateway} ethValue={ethValue} mediChain={mediChain} account={account} /> : <></>}\n        </div>\n    )\n}\n\nexport default Dashboard"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,aAAa;AAChC,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,OAAO,MAAM,cAAc;AAClC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,SAAS,GAAGC,IAAA,IAAgE;EAAAC,EAAA;EAAA,IAA/D;IAACC,SAAS;IAAEC,KAAK;IAAEC,OAAO;IAAEC,cAAc;IAAEC;EAAa,CAAC,GAAAN,IAAA;EACzE,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACZgB,KAAK,CAAC,yDAAyD,CAAC,CAC3DC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAIH,WAAW,CAACG,GAAG,CAACE,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,CAAC;IACjD,IAAGZ,KAAK,KAAG,EAAE,EAAEa,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EAClD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItB,OAAA;IAAKuB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAChBjB,KAAK,KAAG,GAAG,gBAAGP,OAAA,CAACL,OAAO;MAACc,cAAc,EAAEA,cAAe;MAACC,aAAa,EAAEA,aAAc;MAACC,QAAQ,EAAEA,QAAS;MAACL,SAAS,EAAEA,SAAU;MAACE,OAAO,EAAEA;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAAGrB,KAAK,KAAG,GAAG,gBAAGP,OAAA,CAACN,MAAM;MAACe,cAAc,EAAEA,cAAe;MAACC,aAAa,EAAEA,aAAc;MAACJ,SAAS,EAAEA,SAAU;MAACE,OAAO,EAAEA;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAAGrB,KAAK,KAAG,GAAG,gBAAGP,OAAA,CAACJ,OAAO;MAACc,aAAa,EAAEA,aAAc;MAACC,QAAQ,EAAEA,QAAS;MAACL,SAAS,EAAEA,SAAU;MAACE,OAAO,EAAEA;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAAG5B,OAAA,CAAAE,SAAA;EAAK;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjZ;AAEd,CAAC;AAAAvB,EAAA,CAfKF,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAiBf,eAAeA,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}